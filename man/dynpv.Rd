% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dynamic.R
\name{dynpv}
\alias{dynpv}
\title{Calculate present value for a payoff with dynamic pricing and dynamic uptake}
\usage{
dynpv(
  uptakes = 1,
  payoffs,
  horizon = length(payoffs),
  tzero = 0,
  prices = rep(1, length(payoffs) + tzero),
  discrate = 0
)
}
\arguments{
\item{uptakes}{Vector of patient uptake over time}

\item{payoffs}{Vector of payoffs of interest (numeric vector)}

\item{horizon}{Time horizon for the calculation (length must be less than or equal to the length of payoffs)}

\item{tzero}{Time at the date of calculation, to be used in lookup in prices vector}

\item{prices}{Vector of price indices through the time horizon of interest}

\item{discrate}{Discount rate per timestep, corresponding to price index}
}
\value{
Two lists named \code{inputs} and \code{results}.
The \code{inputs} list contains a list of the following parameters called with the function: \verb{uptakes, payoffs, horizon, tzero, prices}, and \code{discrate}.
The \code{results} list contains the following elements:
\itemize{
\item \code{ncoh}: Number of cohorts of uptaking patients
\item \code{uptake}: Total number of uptaking patients
\item \code{calc}: Tibble of calculation results
\item \code{cohpv}: Tibble of summarized calculation results for each uptake cohort
\item \code{total}: Total present value
\item \code{mean}: Average present value per uptaking patient (=total/uptake)
}
}
\description{
Present value of a payoff affected by dynamic pricing, with uptake across multiple cohorts (dynamic uptake)
}
\examples{
# Obtain dataset
democe <- get_dynfields(
   heemodel = oncpsm,
   payoffs = c("cost_daq_new", "cost_total", "qaly"),
   discount = "disc"
   )

# Obtain short payoff vector of interest
payoffs <- democe |>
   dplyr::filter(int=="new", model_time<11) |>
   dplyr::mutate(cost_oth = cost_total - cost_daq_new)
Nt <- nrow(payoffs)

# Example calculation
dynpv(
   uptakes = rep(1, Nt),
   payoffs = payoffs$cost_oth,
   prices = 1 + (1:Nt)*0.05,
   discrate = 0.08 
)
}
